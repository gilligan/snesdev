<!doctype linuxdoc system>

<article>

<title>Oric Atmos specific information for cc65
<author>Ullrich von Bassewitz, <htmlurl url="mailto:uz@cc65.org" name="uz@cc65.org">
Stefan A. Haubenthal, <htmlurl url="mailto:polluks@sdf.lonestar.org" name="polluks@sdf.lonestar.org">
<date>2005-07-17

<abstract>
An overview over the Atmos runtime system as it is implemented for the cc65 C
compiler.
</abstract>

<!-- Table of contents -->
<toc>

<!-- Begin the document -->

<sect>Overview<p>

This file contains an overview of the Atmos runtime system as it comes with the
cc65 C compiler. It describes the memory layout, Atmos specific header files,
available drivers, and any pitfalls specific to that platform.

Please note that Atmos specific functions are just mentioned here, they are
described in detail in the separate <htmlurl url="funcref.html" name="function
reference">. Even functions marked as "platform dependent" may be available on
more than one platform. Please see the function reference for more
information.


<sect>Binary format<p>

The standard binary output format generated by the linker for the Atmos target
is a machine language program with a 14 byte tape header. The standard load
and autostart address is &dollar;500.


<sect>Memory layout<p>

In the standard setup, cc65 generated programs use the memory from
&dollar;500 to &dollar;9800, so nearly 37K of memory (including the stack) is
available. ROM calls are possible without further precautions.

Special locations:

<descrip>
  <tag/Stack/
  The C runtime stack is located at &dollar;97FF and growing downwards.

  <tag/Heap/
  The C heap is located at the end of the program and grows towards the C
  runtime stack.

</descrip><p>



<sect>Platform specific header files<p>

Programs containing Atmos specific code may use the <tt/atmos.h/ header file.


<sect1>Hardware access<p>

The following pseudo variables declared in the <tt/atmos.h/ header file do allow
access to hardware located in the address space. Some variables are
structures, accessing the struct fields will access the chip registers.

<descrip>

  <tag><tt/VIA/</tag>
  Access to the VIA (versatile interface adapter) chip is available via the
  <tt/VIA/ variable. The structure behind this variable is explained in <tt/_6522.h/.

</descrip><p>



<sect>Loadable drivers<p>

<em>Note:</em> Since the Atmos doesn't have working disk I/O
(see <ref id="limitations" name="section &quot;Limitations&quot;">), the
available drivers cannot be loaded at runtime (so the term "loadable drivers"
is somewhat misleading). Instead, the drivers have to be converted using the
<htmlurl url="co65.html" name="co65 utility"> and statically linked. While
this may seem overhead, it has two advantages:

<enum>
<item>The interface is identical to the one used for other platforms
      and to the one for the Atmos once it has disk I/O.
<item>Once disk I/O is available, existing code can be changed to load drivers
      at runtime with almost no effort.
</enum>



<sect1>Graphics drivers<p>

<descrip>

  <tag><tt/atmos-240-200-2.tgi/</tag>
  This driver was written by Stefan Haubenthal. It features a resolution of
  240&times;200 with 2 colors.

</descrip><p>


<sect1>Extended memory drivers<p>

No extended memory drivers are currently available for the Atmos.


<!--<sect1>Joystick drivers<p>

<descrip>

  <tag><tt/atmos-pase.joy/</tag>
  Supports two standard joystick connected to the P.A.S.E. interface of the Atmos.

</descrip><p>-->



<sect1>Mouse drivers<p>

No mouse drivers are currently available for the Atmos.


<sect1>RS232 device drivers<p>

No serial drivers are currently available for the Atmos.



<sect>Limitations<label id="limitations"><p>

<sect1>Disk I/O<p>

The existing library for the Atmos doesn't implement C file
I/O. There is one hack for the <tt/write()/ routine in
place, which will make functions work that write to <tt/stdout/
(like <tt/printf()/). However, this function has some shortcomings which
won't be fixed, because it's going to be replaced anyway.

To be more concrete, this limitation means that you cannot use any of the
following functions (and a few others):

<itemize>
<item>fclose
<item>fopen
<item>fread
<item>fprintf
<item>fputc
<item>fscanf
<item>fwrite
<item>...
</itemize>



<sect>Other hints<p>

<!--<sect1>Passing arguments to the program<p>

Command line arguments can be passed to <tt/main()/. Since this is not
supported by BASIC, the following syntax was chosen:

<tscreen><verb>
    CALL#500:REM,ARG1," ARG2", ARG 3,, ARG5, ...
</verb></tscreen>

<enum>
<item>Arguments are separated by spaces.
<item>Arguments may be quoted.
<item>Leading and trailing spaces around an argument are ignored. Spaces within
      a quoted argument are allowed.
<item>The first argument passed to <tt/main/ is the program name.
<item>A maximum number of 10 arguments (including the program name) are
      supported.
</enum>-->


<sect1>Interrupts<p>

The runtime for the Atmos uses routines marked as <tt/.CONDES/ type 2 for
interrupt handlers. Such routines must be written as simple machine language
subroutines and will be called automatically by the interrupt handler code
when they are linked into a program. See the discussion of the <tt/.CONDES/
feature in the <htmlurl url="ca65.html" name="assembler manual">.



<sect>Bugs/Feedback<p>

If you have problems using the library, if you find any bugs, or if you're
doing something interesting with it, I would be glad to hear from you. Feel
free to contact me by email (<htmlurl url="mailto:uz@cc65.org"
name="uz@cc65.org">).



<sect>License<p>

This software is provided 'as-is', without any expressed or implied
warranty.  In no event will the authors be held liable for any damages
arising from the use of this software.

Permission is granted to anyone to use this software for any purpose,
including commercial applications, and to alter it and redistribute it
freely, subject to the following restrictions:

<enum>
<item>	The origin of this software must not be misrepresented; you must not
	claim that you wrote the original software. If you use this software
	in a product, an acknowledgment in the product documentation would be
	appreciated but is not required.
<item>	Altered source versions must be plainly marked as such, and must not
	be misrepresented as being the original software.
<item>	This notice may not be removed or altered from any source
	distribution.
</enum>

</article>



